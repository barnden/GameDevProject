name: Build

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  workflow_dispatch:

jobs:
  build:
    name: Build Unity Project
    runs-on: self-hosted
    permissions:
      checks: write
    
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          lfs: true

      - uses: actions/cache@v2
        with:
          path: Library
          key: Library-${{ hashFiles('Assets/**', 'Packages/**', 'ProjectSettings/**') }}
          restore-keys: |
            Library-
          
      - name: Tests
        uses: game-ci/unity-test-runner@v2
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
        with:
          githubToken: ${{ secrets.GITHUB_TOKEN }}

      - name: Build (Windows x64)
        id: win64_build
        uses: game-ci/unity-builder@v2
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          unityVersion: ${{ vars.UNITY_VER }}
          allowDirtyBuild: true
          targetPlatform: StandaloneWindows64
          versioning: Semantic
          chownFilesTo: runner:runner

      - name: Upload Build to Web Server
        run: |
          cd $GITHUB_WORKSPACE/build
          echo ${{ secrets.DEPLOY_PASSWORD }} | sudo -S zip -r9 /var/www/html/win64_${{ steps.win64_build.outputs.buildVersion }}_${GITHUB_SHA::7}.zip ./StandaloneWindows64 

      # Work around for self host using user "runner" but files generated by GH Actions in _work are owned by root
      - name: Update Workspace Permissions
        if: always()
        run: |
          echo ${{ secrets.DEPLOY_PASSWORD }} | sudo -S chown -R $USER:$USER $GITHUB_WORKSPACE
